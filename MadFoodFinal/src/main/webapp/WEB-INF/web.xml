<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<filter>
	<filter-name>encodingFilter</filter-name>
	<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
	<init-param>
		<param-name>encoding</param-name>
		<param-value>UTF-8</param-value>
	</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.ktds</url-pattern>
		<url-pattern>/comment</url-pattern>
		<url-pattern>*.etc</url-pattern>
		<url-pattern>*.notice</url-pattern>
		<url-pattern>*.menu</url-pattern>
		<url-pattern>*.order</url-pattern>
	</filter-mapping>

	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring/root-context.xml</param-value>
	</context-param>
	
	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Processes application requests -->
	<servlet>
		<servlet-name>ktdsServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- Dispatcher는 j2EE에서 BBSServlet과 같은 역할 -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/ktds_servlet.xml</param-value>
			<!-- 설정파일 경로를 지워도 돌아간다. 왜? 없으면 자동으로 서블릿이름-servlet.xml을 찾는다 -->
			<!-- 여기서는 ktdsServlet-servlet.xml을 찾는데 패키지에 src/main/java나 resources에서 찾는다 -->
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>ktdsServlet</servlet-name>
		<url-pattern>*.ktds</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>qnaServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- Dispatcher는 j2EE에서 BBSServlet과 같은 역할 -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/qna_servlet.xml</param-value>
			<!-- 설정파일 경로를 지워도 돌아간다. 왜? 없으면 자동으로 서블릿이름-servlet.xml을 찾는다 -->
			<!-- 여기서는 qnaServlet-servlet.xml을 찾는데 패키지에 src/main/java나 resources에서 찾는다 -->
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>qnaServlet</servlet-name>
		<url-pattern>*.qna</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>etcServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
<!--  		Dispatcher는 j2EE에서 BBSServlet과 같은 역할  -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/etc_servlet.xml</param-value>
<!-- 			설정파일 경로를 지워도 돌아간다. 왜? 없으면 자동으로 서블릿이름-servlet.xml을 찾는다 -->
<!--  			여기서는 appServlet-servlet.xml을 찾는데 패키지에 src/main/java나 resources에서 찾는다 -->
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>etcServlet</servlet-name>
		<url-pattern>*.etc</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>noticeServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
<!--  		Dispatcher는 j2EE에서 BBSServlet과 같은 역할  -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/notice_servlet.xml</param-value>
<!-- 			설정파일 경로를 지워도 돌아간다. 왜? 없으면 자동으로 서블릿이름-servlet.xml을 찾는다 -->
<!--  			여기서는 appServlet-servlet.xml을 찾는데 패키지에 src/main/java나 resources에서 찾는다 -->
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>noticeServlet</servlet-name>
		<url-pattern>*.notice</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>menuServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
<!--  		Dispatcher는 j2EE에서 BBSServlet과 같은 역할  -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/menu_servlet.xml</param-value>
<!-- 			설정파일 경로를 지워도 돌아간다. 왜? 없으면 자동으로 서블릿이름-servlet.xml을 찾는다 -->
<!--  			여기서는 appServlet-servlet.xml을 찾는데 패키지에 src/main/java나 resources에서 찾는다 -->
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>menuServlet</servlet-name>
		<url-pattern>*.menu</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>orderServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
<!--  		Dispatcher는 j2EE에서 BBSServlet과 같은 역할  -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/order_servlet.xml</param-value>
<!-- 			설정파일 경로를 지워도 돌아간다. 왜? 없으면 자동으로 서블릿이름-servlet.xml을 찾는다 -->
<!--  			여기서는 appServlet-servlet.xml을 찾는데 패키지에 src/main/java나 resources에서 찾는다 -->
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>orderServlet</servlet-name>
		<url-pattern>*.order</url-pattern>
	</servlet-mapping>

</web-app>